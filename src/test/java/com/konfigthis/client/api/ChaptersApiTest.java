/*
 * api.video
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.Chapter;
import com.konfigthis.client.model.ChaptersListResponse;
import com.konfigthis.client.model.ChaptersUpdatePayload;
import java.io.File;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ChaptersApi
 */
@Disabled
public class ChaptersApiTest {

    private static ChaptersApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ChaptersApi(apiClient);
    }

    /**
     * Delete a chapter
     *
     * Delete a chapter in a specific language by providing the video ID for the video you want to delete the chapter from and the language the chapter is in.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteChapterInLanguageTest() throws ApiException {
        String videoId = null;
        String language = null;
        api.deleteChapterInLanguage(videoId, language)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve a chapter
     *
     * Retrieve a chapter for by video id in a specific language. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getChapterByLanguageTest() throws ApiException {
        String videoId = null;
        String language = null;
        Chapter response = api.getChapterByLanguage(videoId, language)
                .execute();
        // TODO: test validations
    }

    /**
     * List video chapters
     *
     * Retrieve a list of all chapters for by video id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listByVideoTest() throws ApiException {
        String videoId = null;
        Integer currentPage = null;
        Integer pageSize = null;
        ChaptersListResponse response = api.listByVideo(videoId)
                .currentPage(currentPage)
                .pageSize(pageSize)
                .execute();
        // TODO: test validations
    }

    /**
     * Upload a chapter
     *
     * Upload a VTT file to add chapters to your video. Chapters help break the video into sections. Read our [tutorial](https://api.video/blog/tutorials/adding-chapters-to-your-videos/) for more details.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void uploadVttFileTest() throws ApiException {
        String videoId = null;
        String language = null;
        File _file = null;
        Chapter response = api.uploadVttFile(videoId, language, _file)
                .execute();
        // TODO: test validations
    }

}
