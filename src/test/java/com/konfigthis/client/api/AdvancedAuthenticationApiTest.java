/*
 * api.video
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.AccessToken;
import com.konfigthis.client.model.AuthenticatePayload;
import com.konfigthis.client.model.RefreshTokenPayload;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AdvancedAuthenticationApi
 */
@Disabled
public class AdvancedAuthenticationApiTest {

    private static AdvancedAuthenticationApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new AdvancedAuthenticationApi(apiClient);
    }

    /**
     * Get Bearer Token
     *
     * Returns a bearer token that can be used to authenticate other endpoint.  You can find the tutorial on using the disposable bearer token [here](https://docs.api.video/reference/disposable-bearer-token-authentication).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBearerTokenTest() throws ApiException {
        String apiKey = null;
        AccessToken response = api.getBearerToken(apiKey)
                .execute();
        // TODO: test validations
    }

    /**
     * Refresh Bearer Token
     *
     * Accepts the old bearer token and returns a new bearer token that can be used to authenticate other endpoint.  You can find the tutorial on using the disposable bearer token [here](https://docs.api.video/reference/disposable-bearer-token-authentication).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void refreshBearerTokenTest() throws ApiException {
        String refreshToken = null;
        AccessToken response = api.refreshBearerToken(refreshToken)
                .execute();
        // TODO: test validations
    }

}
